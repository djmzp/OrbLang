# TODO scanning

import "base.orb";
import "clib.orb";

fnc std.-print (x:i8) () { printf "%hhd" x; };
fnc std.-print (x:i16) () { printf "%hd" x; };
fnc std.-print (x:i32) () { printf "%d" x; };
fnc std.-print (x:i64) () { printf "%ld" x; };

fnc std.-print (x:u8) () { printf "%hhu" x; };
fnc std.-print (x:u16) () { printf "%hu" x; };
fnc std.-print (x:u32) () { printf "%u" x; };
fnc std.-print (x:u64) () { printf "%lu" x; };

fnc std.-print (x:f32) () { printf "%.4f" (cast f64 x); };
fnc std.-print (x:f64) () { printf "%.4lf" x; };

fnc std.-print (x:c8) () { putchar x; };

fnc std.-print (str:(c8 cn [])) () { printf str; };

mac std.print (first::preprocess rest::(variadic preprocess)) {
    sym (innerCode \{ std.-print ,first; });
    range i (lenOf rest) {
        = innerCode (+ innerCode \{ std.-print ,([] rest i); });
    };
    ret \(block::bare ,innerCode);
};

mac std.println (args::(variadic preprocess)) {
    if (== (lenOf args) 0) {
        ret \(std.-print '\n');
    };

    ret \(block::bare {
        ,(+ \{ std.print } args)
        (std.-print '\n')
    });
};
