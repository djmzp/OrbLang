// TODO put these in a shared file, after importing is implemented
fnc print_i8(i8 x);
fnc print_i16(i16 x);
fnc print_i32(i32 x);
fnc print_i64(i64 x);

fnc println_i8(i8 x);
fnc println_i16(i16 x);
fnc println_i32(i32 x);
fnc println_i64(i64 x);

fnc scan_i8() i8;
fnc scan_i16() i16;
fnc scan_i32() i32;
fnc scan_i64() i64;

fnc print_u8(u8 x);
fnc print_u16(u16 x);
fnc print_u32(u32 x);
fnc print_u64(u64 x);

fnc println_u8(u8 x);
fnc println_u16(u16 x);
fnc println_u32(u32 x);
fnc println_u64(u64 x);

fnc scan_u8() u8;
fnc scan_u16() u16;
fnc scan_u32() u32;
fnc scan_u64() u64;

i32 glob;

fnc main() {
    println_i64(0);
    println_i64(1);
    println_i64(+1);
    println_i64(-1);
    println_i64(2+3);
    println_i64(2-3);
    println_i64(2 - -3);
    println_i64(4*5);
    println_i64(12/3);
    println_i64(12/-5);
    println_i64(1+(2*3));
    println_i64(1+2*3);
    println_i64((1+2)*3);
    println_i64(4*(0-5));

    i64 a = 0;
    println_i64(a);
    println_i64(a=1);
    println_i64(a);
    println_i64(++a);
    println_i64(a);
    println_i64(--a);
    println_i64(a);
    println_i64(--++a);
    println_i64(a);
    println_i64(++a + 10);
    println_i64(a);
    println_i64(a + ++a);
    println_i64(+a);
    println_i64(-a);

    i64 b=1;
    println_i64(a-b);

    {
        i64 a = 100;
        println_i64(a);
    }

    f32 c = f32(5);
    println_i32(i32(c));
    println_i32(i32(+c));
    println_i32(i32(-c));

    glob = 6;
    println_i32(glob);

    bool d = false;
    if (!d) println_i32(0);
    if (!!d) println_i32(0);

    println_i32(~100);
    println_i32(~-100);
    println_u32(~u32(100));

    println_i32(100%-6);
    println_u32(u32(100)%u32(3));
    println_i32(i32(f32(100)%f32(11)));

    println_i32(i32(100)<<2);
    println_i32(i32(100)<<u8(2));
    println_u32(u32(100)<<2);
    println_u32(u32(100)<<u8(2));

    println_i32(i32(100)>>2);
    println_i32(i32(-100)>>2);
    println_i32(i32(100)>>u8(2));
    println_u32(u32(100)>>2);
    println_u32(u32(100)>>u8(2));

    println_i32(11 & 7);
    println_i32(11 & i32(-8));
    println_i32(11 & i32(-6));
    println_u32(u32(11) & u32(7));

    println_i32(11 ^ 7);
    println_i32(12 ^ i32(-8));
    println_i32(12 ^ i32(-6));
    println_u32(u32(11) ^ u32(7));

    println_i32(11 | 7);
    println_i32(12 | i32(-8));
    println_i32(12 | i32(-6));
    println_u32(u32(11) | u32(7));

    //println_i64(0);
    /* println_i64(0); */
    /*
    println_i64(0);
    */
}

//