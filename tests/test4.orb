fnc print_i8(i8 x);
fnc print_i16(i16 x);
fnc print_i32(i32 x);
fnc print_i64(i64 x);

fnc println_i8(i8 x);
fnc println_i16(i16 x);
fnc println_i32(i32 x);
fnc println_i64(i64 x);

fnc scan_i8() i8;
fnc scan_i16() i16;
fnc scan_i32() i32;
fnc scan_i64() i64;

fnc print_u8(u8 x);
fnc print_u16(u16 x);
fnc print_u32(u32 x);
fnc print_u64(u64 x);

fnc println_u8(u8 x);
fnc println_u16(u16 x);
fnc println_u32(u32 x);
fnc println_u64(u64 x);

fnc scan_u8() u8;
fnc scan_u16() u16;
fnc scan_u32() u32;
fnc scan_u64() u64;

fnc print_f32(f32 x);
fnc print_f64(f64 x);

fnc println_f32(f32 x);
fnc println_f64(f64 x);

fnc scan_f32() f32;
fnc scan_f64() f64;

fnc malloc(u64 size) ptr;
fnc free(ptr addr);

i32 * glob = true ? null : null;

fnc main() {
    i32 * a;
    i32 * b, c;
    i32 ** d;

    b = true ? a : c;

    a = null;
    println_i32(i32(null));
    println_i32(i32(a));
    println_u32(u32(a));
    println_i32(i32(i32*(0)));
    println_i32(i32(i32*(u32(0))));

    if (a == b);
    if (a != c);

    a = null;
    if (a == null) println_i32(0);
    if (null == a) println_i32(1);
    if (a != null) println_i32(2);
    if (null != a) println_i32(3);
    if (null == null) println_i32(4);
    if (null != null) println_i32(5);

    a = i32*(malloc(4));
    if (a == null) println_i32(6);
    if (null == a) println_i32(7);
    if (a != null) println_i32(8);
    if (null != a) println_i32(9);
    if (null == null) println_i32(10);
    if (null != null) println_i32(11);
    free(ptr(a));

    b = true ? null : null;
    if (b == null) println_i32(12);
    b = false ? null : null;
    if (b == null) println_i32(13);

    if (glob == null) println_i32(14);

    c = i32*(null);
    if (c == null) println_i32(15);

    ptr e;
    e = null;
    (i8*(e));
    (i32*(e));

    ptr f = null;
    if (e == f) println_i32(16);
    if (e != f) println_i32(17);
}