import "tests/io.orb";

fnc foo() () {
    println_i64 10;
};

fnc bar() () {
    for () () () { ret; };
};

fnc inc(a:i64) i64 {
    ret (+ a 1);
};

fnc blocker() i64 {
    while true;
    ret 0;
};

fnc sameNamed(sameNamed:i32) () {
    println_i32 sameNamed;
};

fnc main() () {
    let (a:i64 1) (b 2:i64);
    if (== a b) {(println_i64 101)};
    if (< a b) {(println_i64 102)};
    if (>= a b) {(println_i64 103)};
    if (> (+ a 3) (+ b 5)) {(println_i64 104)};
    block {
        let (x:i64 5);
        if (> x a) { (println_i64 105) };
    };
    block {
        = a 100;
        if (> a b) { (println_i64 106) };
    };

    = a 1;
    = b 2;
    if (< a b)
        {(println_i64 107)}
        {(println_i64 108)};
    if (== a b)
        {(println_i64 109)}
        {(println_i64 110)};
    if (== (/ a b) 1)
        {(println_i64 111)}
        {(if (== (* a b) 1)
            {(println_i64 112)}
            {(println_i64 113)})};
    if (== (+ a b) 3) {
        (println_i64 114)
        (if (== (% a b) 1) {
            (println_i64 115)
        } {
            (println_i64 116)
        })
    };

    for (let (i:i64 0) (j:i64 (- 1))) (< i 10) (++ i) {(println_i64 (+ i j))};
    for (= a 0) (< a 3) (++ a) {(println_i64 a)};
    for () (>= a 0) (-- a) {(println_i64 a)};

    while (>= b 0) {(println_i64 (-- b))};
    do {
        let (x:i64 2);
        println_i64 b;
        = b (+ b x);
    } (< (+ b a) 8);
    do {println_i64 1;} (>= (-- a) 0);
    do {} (> a 0);

    bar;

    for (let (i:i32 0)) (< i 10) (++ i) {
        exit (>= i 3);
        println_i32 i;
    };

    while (<= a 0) {
        exit (<= a (- 3));
        println_i64 a;
        -- a;
    };

    do {
        exit (== a 0);
        println_i64 a;
        = a 0;
    } (< a 1);

    for (let (i:i32 0)) (< i 10) (++ i) {
        loop (>= i 2);
        println_i32 i;
    };

    while (<= a 0) {
        ++ a;
        loop (> a 0);
        println_i64 a;
    };

    = a 99;
    do {
        loop (== a 0);
        println_i64 a;
        = a 0;
    } (!= a 0);

    for (let (i:i32 0)) (< i 2) (++ i) {
        println_i32 i;
        for (let (j:i32 0)) (< j 5) (++ j) {
            println_i32 j;
            exit (>= j 1);
        };
    };

    for (let (i:i32 0)) (> i (- 2)) (-- i) {
        println_i32 i;
        for (let (j:i32 0)) (> j (- 5)) (-- j) {
            loop (<= j (- 1));
            println_i32 j;
        };
    };

    for (let (i:i32 10)) (< i 15) (++ i) {
        println_i32 i;
        exit (>= i 11);
        for (let (j:i32 10)) (< j 12) (++ j) {
            println_i32 j;
        };
    };

    for (let (i:i32 (- 10))) (> i (- 13)) (-- i) {
        println_i32 i;
        loop (<= i (- 11));
        for (let (j:i32 (- 10))) (> j (- 12)) (-- j) {
            println_i32 j;
        };
    };

    println_i64 (inc b);
    println_i64 (+ (inc b) 1);

    if (> 1 0) {(println_i64 0)} {(println_i64 (blocker))};
    if (< 1 0) {(println_i64 (blocker))} {(println_i64 0)};

    if (and false (== (blocker) 0)) {(println_i32 0)};
    if (or true (== (blocker) 0)) {(println_i32 0)};

    let (bar:i32 200);
    println_i32 bar;

    sameNamed 201;

    while false {
        loop false;
    };

    while true {
        exit true;
    };

    while true {
        exit (> 2 1);
    };

    while false {
        let (x:i32 1);
        loop (> x 2);
    };
};