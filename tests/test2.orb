fnc print_i8(i8 x);
fnc print_i16(i16 x);
fnc print_i32(i32 x);
fnc print_i64(i64 x);

fnc println_i8(i8 x);
fnc println_i16(i16 x);
fnc println_i32(i32 x);
fnc println_i64(i64 x);

fnc scan_i8() i8;
fnc scan_i16() i16;
fnc scan_i32() i32;
fnc scan_i64() i64;

fnc print_u8(u8 x);
fnc print_u16(u16 x);
fnc print_u32(u32 x);
fnc print_u64(u64 x);

fnc println_u8(u8 x);
fnc println_u16(u16 x);
fnc println_u32(u32 x);
fnc println_u64(u64 x);

fnc scan_u8() u8;
fnc scan_u16() u16;
fnc scan_u32() u32;
fnc scan_u64() u64;

fnc print_f32(f32 x);
fnc print_f64(f64 x);

fnc println_f32(f32 x);
fnc println_f64(f64 x);

fnc scan_f32() f32;
fnc scan_f64() f64;

fnc foo() {
    println_i64(10);
}

fnc bar() {
    for (;;) ret;
}

fnc inc(i64 a) i64 {
    ret a+1;
}

fnc blocker() i64 {
    while (true);
    ret 0;
}

fnc main() {
    i64 a = 1, b = 2;
    if (a == b) println_i64(101);
    if (a < b) println_i64(102);
    if (a >= b) println_i64(103);
    if (a+3>b+5) println_i64(104);
    if (i64 x = 5; x > a) println_i64(105);
    if (a = 100; a > b) println_i64(106);

    a = 1;
    b = 2;
    if (a < b) println_i64(107);
    else println_i64(108);
    if (a == b) println_i64(109);
    else println_i64(110);
    if (a / b == 1) println_i64(111);
    else if (a * b == 1) println_i64(112);
    else println_i64(113);
    if (a + b == 3) {
        println_i64(114);
        if (a % b == 1) {
            println_i64(115);
        } else {
            println_i64(116);
        }
    }

    for (i64 i = 0, j = -1; i < 10; ++i) println_i64(i+j);
    for (a = 0; a < 3; ++a) println_i64(a);
    for (; a >= 0; --a) println_i64(a);

    while (b >= 0) println_i64(--b);
    do {
        i64 x = 2;
        println_i64(b);
        b = b + x;
    } while (b + a < 8);
    do println_i64(1); while (--a >= 0);
    do ; while (a > 0);

    bar();

    println_i64(inc(b));
    println_i64(inc(b)+1);

    println_i64(1>0?i64(0):blocker());
    println_i64(1<0?blocker():i64(0));

    if (false and blocker()==0) println_i32(0);
    if (true or blocker()==0) println_i32(0);

    println_f32(true ? f32(0.1) : 1.0);
    println_f32(1.0>0.1 ? 0.1 : f32(1.0));
}