import "util/io.orb";

fnc main () () {
    sym p:i32;

    eval (sym (ty0 i32));
    eval (sym (a:ty0 100));
    println_i32 (eval a);

    eval (sym (id0 \cn));
    eval (sym (b:(i32 id0) 101));
    println_i32 (eval b);

    eval (sym (l0 4));
    eval (sym c:(i32 l0));
    eval (= ([] c 0) 102);
    println_i32 (eval ([] c 0));

    eval (sym (d:(ty0 (= ty0 bool)) (tup 103 false)));
    println_i32 (eval (. d 0));

    eval (= ty0 i32);
    = p 200;
    eval (block {
        exit (== ty0 i32);
        = p -1;
    });
    println_i32 p;

    = p 201;
    eval (block {
        exit (!= ty0 (i32 cn));
        = p -1;
    });
    println_i32 p;

    = p 300;
    block {
        exit (== (typeOf 100) i32);
        = p -1;
    };
    println_i32 p;

    = p 301;
    block {
        exit (!= (typeOf p) (i32 cn));
        = p -1;
    };
    println_i32 p;

    = p 302;
    block {
        exit (== (typeOf \()) raw);
        = p -1;
    };
    println_i32 p;

    block {
        sym x:(i32 3);
        println_i32 (+ 300 (lenOf x));
        println_i32 (+ 300 (lenOf (i32 4)));
    };

    block {
        sym x:(c8 c8 c8 c8 c8);
        println_i32 (+ 300 (lenOf x));
        println_i32 (+ 300 (lenOf (c8 c8 c8 c8 c8 c8)));
    };

    block {
        eval (sym x:raw);
        println_i32 (+ 307 (lenOf x));
        eval (= x \(() () ()));
        println_i32 (+ 305 (lenOf x));
    };

    block {
        sym x:c8 (y:(i16 cn) 0);
        println_i32 (+ 399 (sizeOf x));
        println_i32 (+ 399 (sizeOf y));
        println_i32 (+ 398 (sizeOf i32));
        eval (sym z:i32);
        println_i32 (+ 399 (eval (sizeOf z)));
        println_i32 (+ 400 (eval (sizeOf u32)));
    };
};