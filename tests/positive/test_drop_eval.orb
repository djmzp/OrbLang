import "util/print.orb";

eval (sym printDropValsInnerCode:raw);

mac printDropVals () {
    ret \(block ,printDropValsInnerCode);
};

data Foo {
    x:i32
} (eval (fnc dropFoo (this:Foo::noDrop) () {
    = printDropValsInnerCode (+ printDropValsInnerCode \{ (println_i32 ,([] this x)) });
}));

data Bar {
    f0:Foo
    f1:Foo
} (eval (fnc dropBar (this:Bar::noDrop) () {
    = printDropValsInnerCode (+ printDropValsInnerCode \{ (println_str "Bar") });
}));

eval (fnc foo0 (x:i32) () {
    sym f:Foo;
    = ([] f x) x;
});

eval (fnc foo1 (x:i32) () {
    block {
        sym f:Foo;
        = ([] f x) x;
        ret;
    };
    sym f:Foo;
});

eval (fnc foo2 (f:Foo::noDrop) () {
    cast (Foo cn) f;
});

eval (fnc foo3 (f:(Foo cn)::noDrop) () {
});

eval (fnc foo4 (f:Foo) () {
});

eval (fnc foo5 (f:(Foo cn)) () {
});

eval (fnc foo6 (f:Foo x:i32) () {
    sym f0:Foo;
    = ([] f0 x) x;
});

eval (fnc foo7 (x:i32) Foo {
    sym f:Foo;
    = ([] f x) x;
    ret f;
});

eval (fnc foo8 (x:i32) Foo {
    ret (block Foo {
        sym f:Foo;
        = ([] f x) x;
        pass f;
    });
});

mac foo9 (x) {
    ret x;
};

mac foo10 (x::preprocess) {
    ret \(block {
        sym (f0 ,x) (f1 ,x);
    });
};

mac foo11 (x::preprocess) {
    ret (typeOf x);
};

eval (fnc foo12 (f0:Foo f1:Foo) () {
});

eval (fnc foo13 (f0:Foo::noDrop f1:Foo) () {
});

mac foo14 (x::preprocess) {
    ret \(foo2 ,x);
};

eval (fnc foo15 (f0:Foo f1:Foo) Foo {
    sym x:Foo;
    ret x;
});

mac foo16 (x::preprocess y::preprocess) {
    ret (typeOf x);
};

eval (foo7 90);

fnc main () () {
    eval (block {
        sym f:Foo;
        = ([] f x) 100;
    });

    eval (block {
        sym f0:Foo f1:Foo;
        = ([] f0 x) 201;
        = ([] f1 x) 200;
    });

    eval (block {
        sym f0:Foo;
        = ([] f0 x) 300;
        exit true;
        sym f1:Foo;
    });

    eval (block {
        sym f0:Foo;
        = ([] f0 x) 401;
        exit false;
        sym f1:Foo;
        = ([] f1 x) 400;
    });

    eval (sym i:i32);

    = i -1;
    eval (block {
        = i (+ i 1);
        sym f0:Foo;
        = ([] f0 x) (+ 500 (* 2 i));
        loop (== i 0);
        sym f1:Foo;
        = ([] f1 x) 501;
    });

    eval (block b0 i32 {
        block {
            sym f0:Foo;
            = ([] f0 x) 600;
            pass b0 0;
        };
        pass 0;
    });

    eval (block b0 () {
        sym f0:Foo;
        = ([] f0 x) 701;
        block {
            sym f0:Foo;
            = ([] f0 x) 700;
            exit b0 true;
        };
        sym f1:Foo;
    });

    eval (block {
        sym f:(Foo 2);
        = ([] ([] f 0) x) 801;
        = ([] ([] f 1) x) 800;
        [] f 0;
    });

    eval (block {
        sym f:(Foo Foo);
        = ([] f 0 x) 901;
        = ([] f 1 x) 900;
        [] f 0;
    });

    eval (block {
        sym b:Bar;
        = ([] b f0 x) 1001;
        = ([] b f1 x) 1000;
        [] b f0;
    });

    foo0 1100;

    foo1 1200;

    eval (block {
        sym f:Foo;
        cast Foo f;
        = ([] f x) 1300;
    });

    eval (block {
        sym f:Foo;
        = ([] f x) 1400;
        foo2 f;
        foo3 f;
    });

    eval (block {
        sym f0:Foo f1:Foo;
        = ([] f0 x) 1500;
        = f1 (>> f0);
    });

    eval (block {
        sym f0:Foo;
        = ([] f0 x) 1600;
        sym (f1:(Foo cn) (>> f0));
    });

    eval (block {
        sym f:Foo;
        = ([] f x) 1700;
        foo4 (>> f);
        = ([] f x) 1701;
        foo5 (>> f);
    });

    eval (block {
        sym f:Foo;
        = ([] f x) 1801;
        foo6 (>> f) 1800;
    });

    eval (block Foo {
        sym f:Foo;
        = ([] f x) 1900;
        pass f;
    });

    foo7 2000;
    eval (foo7 2001);

    foo8 2100;

    cast (Foo cn) (foo7 2200);

    foo9 ,(foo7 2300);

    eval (foo10 (foo7 2400));

    >> (foo7 2500);

    foo11 (foo7 -1);

    eval (block {
        sym (r \(,(foo7 2600)));
        [] r 0;
        [] r 0;
    });

    eval (block {
        sym f0:Foo f1:Foo;
        = ([] f0 x) 2701;
        = ([] f1 x) 2700;
        foo12 (>> f0) (>> f1);
        = ([] f0 x) 2703;
        = ([] f1 x) 2702;
        foo13 (>> f0) (>> f1);
    });

    foo14 (foo7 2800);

    eval (block Foo {
        sym (f (foo7 2900));
        pass (foo9 ,f);
    });

    eval (block b0 () {
        foo12 (block Foo { pass (foo7 3000); }) (block Foo { exit b0 true; pass (foo7 -1); });
    });
    eval (block b0 () {
        foo12 (block Foo { pass (foo7 3002); })
            (foo15 (block Foo { pass (foo7 3001); }) (block Foo { exit b0 true; pass (foo7 -1); }));
    });
    eval (block b0 () {
        foo16 (block Foo { pass (foo7 3003); }) (block Foo { exit b0 true; pass (foo7 -1); });
    });
    eval (block b0 () {
        attrOf (foo7 3004) (block id { exit b0 true; pass \x; });
    });
    eval (block b0 () {
        attr?? (foo7 3005) (block id { exit b0 true; pass \x; });
    });

    eval (block {
        sym (f (foo7 3100));
        >>::noZero f;
    });

    printDropVals;
};