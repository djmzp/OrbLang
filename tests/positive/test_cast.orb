import "util/io.orb";

fnc main () () {
    sym (nonNullPtr (cast (i32 *) null));
    = nonNullPtr (cast (i32 *) (+ (cast u64 nonNullPtr) 1));

    println_i32 (cast i32 (block i32 { pass 100; }));
    println_i32 (cast i32 (block i16 { pass 101; }));
    println_i32 (cast i32 (block i64 { pass 102; }));
    println_i32 (cast i32 (block u32 { pass 102; }));
    println_i32 (cast i32 (block f32 { pass 103.0; }));
    println_i32 (cast i32 (block c8 { pass 'a'; }));
    println_i32 (cast i32 (block c8 { pass '\0'; }));
    println_i32 (cast i32 (block bool { pass true; }));
    println_i32 (cast i32 (block ptr { pass null; }));
    println_i32 (cast i32 nonNullPtr);

    println_u32 (cast u32 (block i32 { pass 200; }));
    println_u32 (cast u32 (block i32 { pass -1; }));
    println_u32 (cast u32 (block c8 { pass 'b'; }));
    println_u32 (cast u32 (block bool { pass true; }));
    println_u32 (cast u32 (block ptr { pass null; }));

    println_f32 (cast f32 (block i32 { pass 300; }));
    println_f32 (cast f32 (block u32 { pass 301; }));
    println_f32 (cast f32 (block f64 { pass 302.0; }));

    println_i32 (+ 400 (cast i32 (cast (i32 *) (cast (i32 cn * cn) (cast (i32 cn *) (cast (i32 *) (block ptr { pass null; })))))));
    println_i32 (. (cast (i32 i32) (tup (block i32 { pass 401; }) -1)) 0);
    println_i32 (. (cast ((i32 i32) cn) (tup (block i32 { pass 402; }) -1)) 0);

    println_c8 (cast c8 (block i32 { pass 65; }));
    println_c8 (cast c8 (block u32 { pass 66; }));
    println_c8 (cast c8 (block c8 { pass 'X'; }));

    println_i32 (cast i32 (cast bool (block i32 { pass 0; })));
    println_i32 (cast i32 (cast bool (block i32 { pass 1; })));
    println_i32 (cast i32 (cast bool (block i32 { pass -1; })));
    println_i32 (cast i32 (cast bool (block u32 { pass 0; })));
    println_i32 (cast i32 (cast bool (block u32 { pass 1; })));
    println_i32 (cast i32 (cast bool (block c8 { pass '\0'; })));
    println_i32 (cast i32 (cast bool (block c8 { pass 'a'; })));
    println_i32 (cast i32 (cast bool (block bool { pass true; })));
    println_i32 (cast i32 (cast bool (block ptr { pass null; })));
    println_i32 (cast i32 (cast bool nonNullPtr));

    println_str (cast (c8 cn []) (block (c8 cn []) { pass "hello"; }));

    cast (fnc (i32) ()) nonNullPtr;
    cast ptr main;

    println_i32 (cast i32 (cast bool main));
    println_i32 (cast i32 (cast bool (block (fnc () ()) { sym f:(fnc () ()); pass f; })));
};