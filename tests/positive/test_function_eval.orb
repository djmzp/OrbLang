import "util/io.orb";

eval (sym p0:i32);

eval (fnc f0 () i32 {
    ret 100;
});

eval (fnc f1 (x:i32 y:i32) i32 {
    ret (+ x y);
});

eval (fnc f2 () i64 {
    ret 103;
});

eval (fnc f3 (x:i32) () {
    = p0 x;
});

eval (fnc f4 () () {
});

eval (fnc f5 () () {
    ret;
});

eval (fnc f6 () ());

eval (fnc f7 (f7:i32) i32 {
    ret f7;
});

eval (fnc f7b (f7b:i32) i32 {
    ret (+ f7b 1);
});

eval (fnc f8 () () {
    f3 106;
});

eval (fnc f9 (x:i32) i32 {
    block {
        exit (> x 0);
        ret 1;
    };
    ret (* x (f9 (- x 1)));
});

eval (fnc f10 () i32 {
    ret 108;
});

eval (fnc f11 () i32 {
    block b0 () {
        ret (block i32 {
            exit b0 true;
            pass -1;
        });
    };
    ret 109;
});

eval (fnc f12 () i32 {
    block b0 () {
        ret (block i32 {
            exit b0 false;
            pass 110;
        });
    };
    ret -1;
});

eval (sym (glob (f10)));

eval (sym (globFnc:(fnc (x:i32) i32) f7));

custom MyFnc (fnc (p:i32) i32);

eval (fnc callAndRet (x:i32 f:MyFnc) i32 {
    ret (f x);
});

eval (fnc passthroughFnc (f:MyFnc) MyFnc {
    ret f;
});

fnc main () () {
    block {
        println_i32 (f0);
        println_i32 (f1 100 1);
        println_i32 (f1 100 2:i8);
        println_i64 (f2);
        f3 104;
        println_i32 p0;
        f4;
        f5;
        println_i32 (f7 105);
        f8;
        println_i32 p0;
        println_i32 (- (f9 5) 13);
        println_i32 glob;
        println_i32 (f11);
        println_i32 (f12);
    };

    block {
        eval (sym (x 200));
        println_i32 (globFnc x);
        = globFnc f7b;
        println_i32 (globFnc x);

        eval (sym (c0:(fnc (p:i32) i32)));
        println_i32 (+ 202 (cast i32 (cast ptr c0)));
        = c0 f7b;
        = x 202;
        println_i32 (c0 x);
        = c0 null;
        println_i32 (+ 204 (cast i32 (cast (i32 *) c0)));

        eval (sym (c1:((fnc (p:i32) i32) cn) c0));
        println_i32 (+ 205 (cast i32 (!= c0 c1)));
        = c0 f7;
        println_i32 (+ 205 (cast i32 (!= c0 c1)));
        println_i32 (+ 207 (cast i32 (== c0 c1)));
        = c0 c1;
        println_i32 (+ 207 (cast i32 (== c0 c1)));

        = c0 f7;
        println_i32 ((* (& c0)) 209);
        println_i32 ((* (& f7)) -209);

        println_i32 (+ 210 (cast i32 (== (typeOf c0) (typeOf c1))));
        println_i32 (+ 210 (cast i32 (== ((fnc (p:i32) i32) cn) (typeOf c1))));

        eval (sym (c2:MyFnc));
        = c2 (cast MyFnc f7);
        println_i32 (c2 212);

        println_i32 (callAndRet 213 c2);
        println_i32 (callAndRet 213 (cast MyFnc f7b));

        println_i32 ((passthroughFnc (cast MyFnc f7)) 215);
        println_i32 ((passthroughFnc c2) 216);
    };
};