fnc print_i8(i8 x);
fnc print_i16(i16 x);
fnc print_i32(i32 x);
fnc print_i64(i64 x);

fnc println_i8(i8 x);
fnc println_i16(i16 x);
fnc println_i32(i32 x);
fnc println_i64(i64 x);

fnc scan_i8() i8;
fnc scan_i16() i16;
fnc scan_i32() i32;
fnc scan_i64() i64;

fnc print_u8(u8 x);
fnc print_u16(u16 x);
fnc print_u32(u32 x);
fnc print_u64(u64 x);

fnc println_u8(u8 x);
fnc println_u16(u16 x);
fnc println_u32(u32 x);
fnc println_u64(u64 x);

fnc scan_u8() u8;
fnc scan_u16() u16;
fnc scan_u32() u32;
fnc scan_u64() u64;

fnc print_f32(f32 x);
fnc print_f64(f64 x);

fnc println_f32(f32 x);
fnc println_f64(f64 x);

fnc scan_f32() f32;
fnc scan_f64() f64;

fnc print_c8(c8 x);

fnc println_c8(c8 x);

fnc scan_c8() c8;

f32 glob1 = true ? 1.0 : -1.0;
f64 glob2 = 1>3 ? 1.0/5. : -1.0;

fnc main() {
    -10;
    (i64(0));
    
    { println_i32(i32(-10)); println_i32(i16(10)); println_i8(i8(i64(1027))); }
    { println_u32(u32(-10)); }
    { println_i32(i32(f16(-10))); }
    { i32 x = 10; println_i32(i32(bool(x))); println_i32(i32(bool(10))); println_i32(i32(bool(-10))); }

    { println_i32(i32(u32(10))); }
    { println_u32(u32(10)); println_u32(u16(10)); println_u8(u8(u64(1027))); }
    { println_u32(u32(f32(10))); }
    { u32 x = u32(10); println_i32(i32(bool(x))); println_i32(i32(bool(u32(10)))); println_i32(i32(bool(u32(-10)))); }

    { println_i32(i32(f32(10))); }
    { println_i32(i32(f32(u32(10)))); }
    { println_i32(i32(f32(-10))); println_i32(i32(f16(10))); println_i32(i32(f16(f64(1027)))); }

    { println_i32(i32(true)); println_i32(i32(false)); }
    { println_u32(u32(true)); println_u32(u32(false)); }

    bool t = true;
    bool f = false;

    println_f32(true ? f32(0.1) : 1.0);
    println_i32(f ? 0 : 11);
    println_f32(1.0>0.1 ? 1.1 : f32(0.11));

    println_f32(glob1);
    println_f64(glob2);

    println_f64(t ? glob1+1. : glob2+1.);
    println_f64(t ? glob2+1. : glob1+1.);

    {
        c8 c = 'a';
        println_c8(c);
        c = c8(65);
        println_c8(c);
        i32 x = 66;
        c = c8(x);
        println_c8(c);
        println_u8(u8(c));
        println_i32(i32('C'));
        println_i32(i16('A')-i16('a'));
        println_c8(true ? 'D' : 'E');
        println_c8(t ? 'F' : 'G');
        println_c8(' ');
        println_c8('\n');
        println_c8('\'');
        println_c8('\x48');
        println_c8('\\');
    }
}