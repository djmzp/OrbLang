import "tests/io.orb";

data Point {
    i32 x, y;
    bool v;
}

data Node {
    i32 val;
    Node* l, r;
}

data Tree {
    Node root;
}

data PtrI32Cn {
    i32 cn* p;
}

data ArrI32 {
    i32[4] a{0, 1, 2, 3};
}

data Zero {
    i32 cn x = 0;
}

fnc makePoint(i32 x, i32 y, bool v) Point {
    Point p;
    p.x = x;
    p.y = y;
    p.v = v;
    ret p;
}

fnc makeNode(i32 val, Node* l, Node* r) Node {
    Node n;
    n.val = val;
    n.l = l;
    n.r = r;
    ret n;
}

fnc main() {
    {
        Zero z;
        println_i32(z.x);
        ArrI32 a;
        println_i32(a.a[1]);
    }
    {
        Point p;
        p.x = 100;
        p.y = 101;
        println_i32(p.x);
        p.v = false;
        if (p.v) println_i32(p.y);
    }
    {
        Point cn p = makePoint(200, 201, true);
        println_i32(p.x);
        println_i32(*&p.y);
    }
    {
        Point[4] p;
        p[2] = makePoint(300, 301, false);
        println_i32(p[2].x);
    }
    {
        ArrI32 a;
        a.a[2] = makePoint(400, 401, false);
        println_i32(a.a[2].x);
    }
    {
        println_i32(makePoint(500, 501, true).x);
    }
    {
        Node n1 = makeNode(600, null, null);
        println_i32(n1.val);
        Node n2 = makeNode(601, null, null);
        n.l = &n2;
        println_i32((*n1.l).val);
    }
    {
        Tree t;
        t.root = makeNode(700, null, null);
        println_i32(t.root.val);
    }
}